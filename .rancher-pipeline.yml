stages:
  # 建立 rancher_pipeline 專用的 Docker Image
  - name: Publish rancher pipeline service image
    steps:
    - publishImageConfig:
        dockerfilePath: ./Dockerfile.pipeline-generate-service
        buildContext: .
        tag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_REPO_NAME}:${CICD_GIT_BRANCH}-${CICD_GIT_COMMIT}
        pushRemote: true
        registry: 10.20.0.73:5443
      env:
        PLUGIN_BUILD_ARGS: --progress=tty --network=host
        PLUGIN_DEBUG: "true"
        PLUGIN_INSECURE: "true"
        PLUGIN_MIRROR: https://10.20.0.73:5443
        PLUGIN_MTU: "1000"
  
  #  採用chart的形式
  - name: Deploy app-web
    steps:
    - applyAppConfig:
      catalogTemplate: cattle-global-data:iii-dev-charts3-web
      version: 0.2.0
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-web
      targetNamespace: ${CICD_GIT_REPO_NAME}
      answers:
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        xip.ip: "10.20.0.74"
        harbor.host: "10.20.0.73:5443"
        # 基礎pipeline參數
        git.host: "10.20.0.73"
        git.url: ${CICD_GIT_URL}
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        # web參數設定
        web.type: uwsgi-flask
        # 10.50.1.63:5443/app/${CICD_GIT_REPO_NAME}-web
        web.image: ${CICD_GIT_REPO_NAME}/${CICD_GIT_REPO_NAME}
        web.tag: ${CICD_GIT_BRANCH}-${CICD_GIT_COMMIT}
    
